<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="catBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>